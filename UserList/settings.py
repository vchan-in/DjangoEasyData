"""
Django settings for UserList project.

Generated by 'django-admin startproject' using Django 3.2.6.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""

from pathlib import Path

import os
from dotenv import load_dotenv

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Load environment variables from .env file
load_dotenv(dotenv_path=os.path.join(BASE_DIR, '.env'))

if load_dotenv:
    print("Environment variables loaded from .env file")

# Get the environment variables from .env file if not available in os environment
MYSQL_DATABASE = os.getenv('MYSQL_DATABASE') if os.getenv('MYSQL_DATABASE') else 'userslist'
MYSQL_USER = os.getenv('MYSQL_USER') if os.getenv('MYSQL_USER') else 'dbuser'
MYSQL_PASSWORD = os.getenv('MYSQL_PASSWORD') if os.getenv('MYSQL_PASSWORD') else 'dbuser@123'
MYSQL_HOST = os.getenv('MYSQL_HOST') if os.getenv('MYSQL_HOST') else 'localhost'
MYSQL_PORT = os.getenv('MYSQL_PORT') if os.getenv('MYSQL_PORT') else '3306'
RANDTRONICS_EASYDATA_API = os.getenv('RANDTRONICS_EASYDATA_API') if os.getenv('RANDTRONICS_EASYDATA_API') else 'https://192.168.2.144:8643'
RANDTRONICS_EASYDATA_AUTH_KEY = os.getenv('RANDTRONICS_EASYDATA_AUTH_KEY') if os.getenv('RANDTRONICS_EASYDATA_AUTH_KEY') else 'YXBpdXNlcjphcGl1c2VyQDEyMw=='
RANDTRONICS_EASYDATA_CLIENT_USERNAME = os.getenv('RANDTRONICS_EASYDATA_CLIENT_USERNAME') if os.getenv('RANDTRONICS_EASYDATA_CLIENT_USERNAME') else 'demoappnew'
RANDTRONICS_EASYDATA_CLIENT_PASSWORD = os.getenv('RANDTRONICS_EASYDATA_CLIENT_PASSWORD') if os.getenv('RANDTRONICS_EASYDATA_CLIENT_PASSWORD') else 'demoappnew@123'


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-jx52f0bg#60m6xmdy=1wd86*$k%6ozws@y^b(u@#8kifw^mn)%'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'users',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'UserList.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'UserList.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': BASE_DIR / 'db.sqlite3',
#     }
# }

# MYSQL DATABASE
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': MYSQL_DATABASE,
        'USER': MYSQL_USER,
        'PASSWORD': MYSQL_PASSWORD,
        'HOST': MYSQL_HOST,
        'PORT': MYSQL_PORT,
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

STATIC_URL = '/static/'

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
